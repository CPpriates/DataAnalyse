1.如果在多维数组中执行翻转一位数组的命令，将在最前面的元素上翻转元素的顺序。
b = arange(24).reshape(2,3,4)
b[::-1]
2.:
->用ravel()完成展平的操作   返回的是数组的视图
->用flatten()展平，但是会请求非配内存来保存结果
->用元组设置维度b.shape = (6,4)
->transpose()对矩阵进行转置
->resize()展平，但是会直接修改所操作的数组  b.resize((2,12))

3.数组组合：数组组合有水平组合、垂直组合、深度组合等组合方式
->水平组合，将naarray对象构成的元组作为参数，传给hatack函数    hstack((a,b))
  concatenate((a,b),axis = 1)   同样水平组合
->垂直组合 vstack()
  concatenate((a,b),axis = 0)  默认axis = 0
->深度组合 dstack((a,b)) 概念
->列组合： column_stack()对一位数组将按列方向进行组合；而对于二维数组，其与hstack()效果一样
->行组合：row_stack() 对与一位数组直接组合成一个二维数组；而对于二维数组，与vstack()效果一样

4.数组分割：水平、垂直、深度分割
->水平分割hsplit(a,3)    ====   split(a,3,axis = 1)
->垂直分割vsplit(a,3)    ====   split(a,3,axis = 0)
->深度分割dsplit(c,3)

5.数组的属性：
->ndim    给出数组的维数，或数组轴的个数
->size    数组元素的总个数
->itemsize   数组中元素在内存中所占字节数
->nbytes    整个数组所占空间
->real      复数的实部
->imag      复数的虚部
->flat属性返回一个numpy.flatiter对象，这是获得flatiter对象的唯一方式，可以遍历任意的多维数组
  b.flat[2]  //直接获取一个数组中的元素
  b.flat[[1,2]]   //获取多个元素

-------------------------------------
函数：
np.mean()  //算术平均值
np.min()
np.max()
np.ptp()  //计算数组的取值范围，返回数组元素的最大值和最小值之间的差值
np.median()  中位数
np.msort()   排序
np.var()     方差   方差能够体现变量变化的程序
np.std()     标准差

